dist: trusty
sudo: required
language: bash
env:
  global:
  - PATH="${HOME}/bin
  - TMPDIR="${TMPDIR:-/tmp}"
  - TFVERSION="0.11.5"
  - TFLVERSION="0.5.4"
  - PACKERVERSION="1.2.2"
before_install:
- curl https://raw.githubusercontent.com/express42/otus-homeworks/2018-02/run.sh |
  bash
- sudo -H pip install -r ansible/requirements.txt
- sudo -H pip install ansible-lint
- mkdir -p "${HOME}/bin"
- pushd "${TMPDIR}"
- curl -sSL
    -o packer.zip
    "https://releases.hashicorp.com/packer/${PACKERVERSION}/packer_${PACKERVERSION}_linux_amd64.zip"
- unzip -o packer.zip
- mv -v packer "${HOME}/bin/packer"
- chmod +x "${HOME}/bin/packer"
- popd
- pushd "${TMPDIR}"
- curl -sSL
    -o terraform.zip
    "https://releases.hashicorp.com/terraform/${TFVERSION}/terraform_${TFVERSION}_linux_amd64.zip"
- unzip -o terraform.zip
- mv -v terraform "${HOME}/bin/terraform"
- chmod +x "${HOME}/bin/terraform"
- popd
- pushd "${TMPDIR}" 
- curl -sSL
    -o tflint.zip
    https://github.com/wata727/tflint/releases/download/v${TFLVERSION}/tflint_linux_amd64.zip
- unzip -o tflint.zip
- mv -v tflint "${HOME}/bin/tflint"
- chmod +x "${HOME}/bin/tflint"
- popd
- touch ~/.ssh/appuser.pub
- touch ~/.ssh/appuser 
- packer validate -var-file=packer/variables.json.example packer/app.json
- packer validate -var-file=packer/variables.json.example packer/db.json
- pushd ./packer/
- packer validate -var-file=variables.json.example immutable.json
- packer validate -var-file=variables.json.example ubuntu16.json
- popd
- pushd ./terraform/prod/
- terraform init -backend=false 
- terraform validate -var-file=terraform.tfvars.example
- tflint --var-file=terraform.tfvars.example
- popd
- pushd ./terraform/stage/
- terraform init -backend=false 
- terraform validate -var-file=terraform.tfvars.example
- tflint --var-file=terraform.tfvars.example
- popd
- ansible-lint ansible/playbooks/*.yml
notifications:
  slack:
    secure: NZmaL78jhkC0yPE3pyEZK7wx7TDW/ygthz37MvMsCcvBlM+CnpnZz5S7/d+aQzfyadmOaehraFunYxEqmKjYcaqBiM/dLEezk1ygLo5vVTtRCLQf9tN7zzYNfkYRo4y4q8MnuBAV6r0X+H5cAf2M4rPTRR6gr6+XAFTrrZ3a86evxXLD2k/2OTqK8zBuIBh56CNKuTjg8h9ASYWUukkDsL+EBWvpEu1Q0HRNOF8bHYVc6v7ZPp0ZyYmFRQyzyrB+DVeIEu6yfOJoAeCFZ1hnpBJvbw8oLktszg0BLuTDvoBM/IPKOfJrwu5up32aHr60ywJ2v8gD3ePa1sGjlADLN7Tq+Z9hjmHN0YKMWmSrcKqq9WVDHbIbIOym8KLk8JUUfAPOkZVCX0QA4kDvnAn+6/WWBnrK5VvGZubERW/E3VVuUykME/dJN9naqE+ypbkX72AmxVL8uzENgFKySARKBDFr3L/iA8zRjMa3rvLIqZFCsIrDLNBCxWBzJootbqqrjsPTwuI3q/2jKCmIAdC0ch4u9eDFMFS531ZHn8/r3wJ1GVZE5PkfFJws5sKfcNwriHgxhyhH2N+ygYcaemX00msBfTkKnA9Zl+CY2fIbtQvYrdYd83LnQRnk/MdR+66Imuk9SYceu+0fGK1ANc8j+eAPUa+F19pn9r8Gu1eAvaQ=
